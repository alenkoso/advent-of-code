name: Advent of Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # Check for serious errors only
        flake8 . --count --select=F,E9,W6 --show-source --statistics
        # Run full linting with configured rules
        flake8 . --count --max-complexity=10 --statistics
    
    - name: Run tests and solutions
      run: |
        for year_dir in src/*/; do
          if [ ! -d "$year_dir" ]; then continue; fi
          year=$(basename "$year_dir")
          echo "Processing year: $year"
          
          for day_dir in "$year_dir"Day_*/; do
            if [ ! -d "$day_dir" ]; then continue; fi
            day=$(basename "$day_dir")
            echo "Processing $year $day"
            
            cd "$day_dir"
            
            # Look for test file and run if found
            test_file=$(find . -name "test_*.py" -maxdepth 1)
            if [ ! -z "$test_file" ]; then
              echo "Running tests for $year $day"
              python -m pytest -v "$test_file"
            else
              echo "No tests found for $year $day"
              exit 1
            fi
            
            # Run solution
            solution_file=$(find . -name "day*.py" -maxdepth 1)
            if [ ! -z "$solution_file" ]; then
              echo "Running solution for $year $day"
              python "$solution_file"
            else
              echo "No solution found for $year $day"
              exit 1
            fi
            
            cd -
          done
        done